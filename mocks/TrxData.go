// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	transaction "ecommerce/features/transaction"

	mock "github.com/stretchr/testify/mock"
)

// TrxData is an autogenerated mock type for the TrxData type
type TrxData struct {
	mock.Mock
}

// Add provides a mock function with given fields: userID, newTrx
func (_m *TrxData) Add(userID uint, newTrx transaction.Core) (transaction.Core, error) {
	ret := _m.Called(userID, newTrx)

	var r0 transaction.Core
	if rf, ok := ret.Get(0).(func(uint, transaction.Core) transaction.Core); ok {
		r0 = rf(userID, newTrx)
	} else {
		r0 = ret.Get(0).(transaction.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, transaction.Core) error); ok {
		r1 = rf(userID, newTrx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTrxData interface {
	mock.TestingT
	Cleanup(func())
}

// NewTrxData creates a new instance of TrxData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTrxData(t mockConstructorTestingTNewTrxData) *TrxData {
	mock := &TrxData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
